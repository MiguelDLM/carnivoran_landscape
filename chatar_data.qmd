---
title: "Carnivoran jaws available"
author: "E. Miguel Díaz de León-Muñoz"
date: "`r Sys.Date()`"
format:
  html:
    theme: cosmo
    toc: false
    code-fold: true
    page-layout: full
execute:
  echo: true
  warning: false
---


```{r}
#load csv
mandibles_dataset <- read.csv("mandibles_dataset.csv")
```

# Interactive Sunburst Chart

```{r}
# Interactive sunburst chart (3-level): Root > Family > Availability > Extant Status
library(plotly)
library(dplyr)
library(tibble)
library(htmltools)

# Prepare data for sunburst: ensure we have the columns and clean values
mandibles_dataset <- mandibles_dataset %>%
  mutate(
    family = ifelse(!is.null(family.y) & !is.na(family.y) & family.y != "", as.character(family.y), "Unknown"),
    # Categorize availability as "Available" if any non-empty value exists, "Not Available" otherwise
    availability = case_when(
      !is.na(availability) & availability != "" ~ "Available",
      TRUE ~ "Not Available"
    ),
    is_extant = ifelse(is.na(is_extant) | is_extant == "", "Unknown", as.character(is_extant))
  )

# Build hierarchical data structure for sunburst
# Level 1: Root (center)
# Level 2: Families 
# Level 3: Availability within families
# Level 4: Extant status within availability

# Count species at each level
species_counts <- mandibles_dataset %>%
  group_by(family, availability, is_extant) %>%
  summarise(n_species = n_distinct(accepted_name), .groups = "drop") %>%
  filter(n_species > 0)

# Create sunburst data structure
## Build sunburst nodes with unique ids to avoid collisions
safe_id <- function(x) gsub("[^A-Za-z0-9_:-]", "_", x)

sunburst_data <- tibble(ids=character(), labels=character(), parents=character(), values=numeric(), colors=character())

# Root node
sunburst_data <- sunburst_data %>% add_row(ids = "root::Carnivora", labels = "Carnivora", parents = "", values = sum(species_counts$n_species), colors = "#CCCCCC")

# Family nodes
family_data <- species_counts %>% group_by(family) %>% summarise(total_species = sum(n_species), .groups = "drop") %>% arrange(desc(total_species))
for(i in seq_len(nrow(family_data))) {
  fam <- family_data$family[i]
  fam_id <- paste0("fam::", safe_id(fam))
  total_sp <- family_data$total_species[i]
  sunburst_data <- sunburst_data %>% add_row(ids = fam_id, labels = paste0(fam, "<br>(", total_sp, " spp)"), parents = "root::Carnivora", values = total_sp, colors = "#888888")
}

# Availability nodes
avail_data <- species_counts %>% group_by(family, availability) %>% summarise(total_species = sum(n_species), .groups = "drop")
for(i in seq_len(nrow(avail_data))) {
  fam <- avail_data$family[i]
  fam_id <- paste0("fam::", safe_id(fam))
  avail <- avail_data$availability[i]
  avail_id <- paste0(fam_id, "::avail::", safe_id(avail))
  total_sp <- avail_data$total_species[i]
  color <- ifelse(avail == "Available", "#228B22", "#DC143C")  # Green for Available, Red for Not Available
  sunburst_data <- sunburst_data %>% add_row(ids = avail_id, labels = paste0(avail, "<br>(", total_sp, " spp)"), parents = fam_id, values = total_sp, colors = color)
}

# Extant status (leaf) nodes
for(i in seq_len(nrow(species_counts))) {
  fam <- species_counts$family[i]
  fam_id <- paste0("fam::", safe_id(fam))
  avail <- species_counts$availability[i]
  avail_id <- paste0(fam_id, "::avail::", safe_id(avail))
  extant <- species_counts$is_extant[i]
  node_id <- paste0(avail_id, "::", safe_id(extant))
  n_sp <- species_counts$n_species[i]
  color <- ifelse(extant == "extant", "#4169E1", ifelse(extant == "extinct", "#FFD700", "#D3D3D3"))
  sunburst_data <- sunburst_data %>% add_row(ids = node_id, labels = paste0(extant, "<br>(", n_sp, " spp)"), parents = avail_id, values = n_sp, colors = color)
}

# Sanity checks
if(any(duplicated(sunburst_data$ids))) stop("Duplicate ids detected in sunburst_data; aborting")

# Create interactive sunburst chart and pass marker colors explicitly
fig <- plot_ly(
  type = "sunburst",
  ids = sunburst_data$ids,
  labels = sunburst_data$labels,
  parents = sunburst_data$parents,
  values = sunburst_data$values,
  branchvalues = "total",
  marker = list(colors = sunburst_data$colors),
  hovertemplate = "<b>%{label}</b><br>Species: %{value}<br>Percentage: %{percentParent}<extra></extra>",
  maxdepth = 4,
  insidetextorientation = 'radial'
)
fig <- fig %>% layout(
  title = list(text = "Interactive Carnivoran Species Distribution", font = list(size = 16)), 
  font = list(size = 12), 
  margin = list(t = 50, l = 0, r = 0, b = 0),
  height = 900,  # Set explicit height to override the default 400px
  width = NULL   # Let width be responsive
)

# Make plotly responsive 
fig <- fig %>% config(responsive = TRUE)

# Wrap in a div that uses viewport height to ensure proper display
htmltools::div(style = "width:100%; height:80vh; min-height:900px;", fig)
```

```{r, echo=FALSE}
# Combined pie charts: Species and Genera availability by extinction status
# Load the original dataset to avoid conflicts with sunburst modifications
original_dataset <- read.csv("mandibles_dataset.csv")

# --- Species counts ---
sp_available_all <- original_dataset %>% 
  filter(availability %in% c("Chatar", "Ann")) %>% 
  summarise(n = n_distinct(accepted_name)) %>% pull(n)

sp_not_available_all <- original_dataset %>% 
  filter(is.na(availability) | availability == "") %>% 
  summarise(n = n_distinct(accepted_name)) %>% pull(n)

extant_species <- original_dataset %>% filter(is_extant == "extant")
sp_available_extant <- extant_species %>% 
  filter(availability %in% c("Chatar", "Ann")) %>% 
  summarise(n = n_distinct(accepted_name)) %>% pull(n)
sp_not_available_extant <- extant_species %>% 
  filter(is.na(availability) | availability == "") %>% 
  summarise(n = n_distinct(accepted_name)) %>% pull(n)

extinct_species <- original_dataset %>% filter(is_extant == "extinct")
sp_available_extinct <- extinct_species %>% 
  filter(availability %in% c("Chatar", "Ann")) %>% 
  summarise(n = n_distinct(accepted_name)) %>% pull(n)
sp_not_available_extinct <- extinct_species %>% 
  filter(is.na(availability) | availability == "") %>% 
  summarise(n = n_distinct(accepted_name)) %>% pull(n)

species_total <- sp_available_all + sp_not_available_all
sp_total_extant <- sp_available_extant + sp_not_available_extant
sp_total_extinct <- sp_available_extinct + sp_not_available_extinct

# --- Genera counts ---
md <- original_dataset
md$genus_clean <- md$genus.x
missing_idx <- is.na(md$genus_clean) | md$genus_clean == ""
md$genus_clean[missing_idx] <- md$genus.y[missing_idx]

genus_summary <- md %>%
  filter(!is.na(genus_clean) & genus_clean != "") %>%
  group_by(genus_clean) %>%
  summarise(
    any_available = any(availability %in% c("Chatar", "Ann"), na.rm = TRUE),
    any_extant = any(is_extant == "extant", na.rm = TRUE),
    any_extinct = any(is_extant == "extinct", na.rm = TRUE),
    .groups = "drop"
  )

genera_total <- nrow(genus_summary)
genera_available <- sum(genus_summary$any_available)
genera_not_available <- genera_total - genera_available

genus_extant <- genus_summary %>% filter(any_extant)
genera_extant_total <- nrow(genus_extant)
genera_extant_available <- sum(genus_extant$any_available)
genera_extant_not_available <- genera_extant_total - genera_extant_available

genus_extinct <- genus_summary %>% filter(!any_extant & any_extinct)
genera_extinct_total <- nrow(genus_extinct)
genera_extinct_available <- sum(genus_extinct$any_available)
genera_extinct_not_available <- genera_extinct_total - genera_extinct_available

# --- Build plotly figures ---
fig_sp_all <- plot_ly(labels = c("Available", "Not available"),
                      values = c(sp_available_all, sp_not_available_all),
                      type = 'pie', name = "All Species",
                      textinfo = 'label+percent+value',
                      insidetextorientation = 'radial',
                      marker = list(colors = c('#228B22', '#DC143C'))) %>%
  layout(title = paste0('All Species (Total: ', species_total, ')'))

fig_sp_extant <- plot_ly(labels = c("Available", "Not available"),
                         values = c(sp_available_extant, sp_not_available_extant),
                         type = 'pie', name = "Extant Species",
                         textinfo = 'label+percent+value',
                         insidetextorientation = 'radial',
                         marker = list(colors = c('#228B22', '#DC143C'))) %>%
  layout(title = paste0('Extant Species (Total: ', sp_total_extant, ')'))

fig_sp_extinct <- plot_ly(labels = c("Available", "Not available"),
                          values = c(sp_available_extinct, sp_not_available_extinct),
                          type = 'pie', name = "Extinct Species",
                          textinfo = 'label+percent+value',
                          insidetextorientation = 'radial',
                          marker = list(colors = c('#228B22', '#DC143C'))) %>%
  layout(title = paste0('Extinct Species (Total: ', sp_total_extinct, ')'))

fig_ge_all <- plot_ly(labels = c("Available", "Not available"),
                      values = c(genera_available, genera_not_available),
                      type = 'pie', name = "All Genera",
                      textinfo = 'label+percent+value',
                      insidetextorientation = 'radial',
                      marker = list(colors = c('#228B22', '#DC143C'))) %>%
  layout(title = paste0('All Genera (Total: ', genera_total, ')'))

fig_ge_extant <- plot_ly(labels = c("Available", "Not available"),
                         values = c(genera_extant_available, genera_extant_not_available),
                         type = 'pie', name = "Extant Genera",
                         textinfo = 'label+percent+value',
                         insidetextorientation = 'radial',
                         marker = list(colors = c('#228B22', '#DC143C'))) %>%
  layout(title = paste0('Extant Genera (Total: ', genera_extant_total, ')'))

fig_ge_extinct <- plot_ly(labels = c("Available", "Not available"),
                          values = c(genera_extinct_available, genera_extinct_not_available),
                          type = 'pie', name = "Extinct Genera",
                          textinfo = 'label+percent+value',
                          insidetextorientation = 'radial',
                          marker = list(colors = c('#228B22', '#DC143C'))) %>%
  layout(title = paste0('Extinct Genera (Total: ', genera_extinct_total, ')'))

# --- Render as two responsive rows ---
htmltools::tagList(
  htmltools::div(style = "display:flex; gap:16px; flex-wrap:wrap; align-items:stretch;", 
    htmltools::div(style = "flex:1 1 300px; min-width:280px;", fig_sp_all),
    htmltools::div(style = "flex:1 1 300px; min-width:280px;", fig_sp_extant),
    htmltools::div(style = "flex:1 1 300px; min-width:280px;", fig_sp_extinct)
  ),
  htmltools::hr(),
  htmltools::div(style = "display:flex; gap:16px; flex-wrap:wrap; align-items:stretch;", 
    htmltools::div(style = "flex:1 1 300px; min-width:280px;", fig_ge_all),
    htmltools::div(style = "flex:1 1 300px; min-width:280px;", fig_ge_extant),
    htmltools::div(style = "flex:1 1 300px; min-width:280px;", fig_ge_extinct)
  )
)
```